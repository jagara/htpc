version: '3.6'

networks:
  int:
    name: internal
    driver: bridge

services:
  smb:
    image: dperson/samba
    networks:
      - int
    ports:
      - '139:139'
      - '445:445'
    restart: unless-stopped
    healthcheck:
      test:
        - 'CMD-SHELL'
        - 'smbclient -L "\\localhost" -U "%" -m SMB3'
      interval: 10m
      timeout: 15s
      retries: 3
      start_period: 60s
    environment:
      - WORKGROUP=WORKGROUP
      - TZ=Europe/Sofia
      - USERID=${SERV_PUID:?err}
      - GROUPID=${SERV_PGID:?err}
      - INCLUDE=/samba/cfg
      - IMPORT=/samba/passwds #pdbedit --list --smbpasswd-style > /samba/passwds
      - RECYCLE
      - PERMISSIONS
    volumes:
      - ${SERV_STORAGE_PATH:?err}:/mount
      - ${SERV_STORAGE_PATH_BACKUP:?err}:/backup
      - ${SERV_CFG_ROOT:?err}/samba:/samba
    command:
      - '-g server min protocol = NT1'
      - '-g hosts allow = 192.168.1. 172.17.0. 10.8.0.'
      - '-g netbios name = MediaLTS'
      - '-g socket options = TCP_NODELAY SO_KEEPALIVE IPTOS_LOWDELAY SO_RCVBUF=65536 SO_SNDBUF=65536'
      - '-g server string = MediaLST Samba Server'
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'

  portainer:
    image: portainer/portainer
    networks:
      - int
    ports:
      - '9000:9000'
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${SERV_CFG_ROOT:?err}/portainer:/data
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'

  transmission:
    image: linuxserver/transmission
    networks:
      - int
    ports:
      - '9091:9091'
      - '51413:51413'
      - '51413:51413/udp'
    restart: unless-stopped
    environment:
      - TZ=Europe/Sofia
      - PUID=${SERV_PUID:?err}
      - PGID=${SERV_PGID:?err}
    volumes:
      - ${SERV_CFG_ROOT:?err}/transmission:/config
      - ${SERV_STORAGE_PATH:?err}/torrents:/downloads
      - ${SERV_STORAGE_PATH:?err}/torrents:/watch
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'

  sonarr:
    depends_on:
      - jackett
    image: linuxserver/sonarr
    networks:
      - int
    ports:
      - '8989:8989'
    restart: unless-stopped
    environment:
      - TZ=Europe/Sofia
      - PUID=${SERV_PUID:?err}
      - PGID=${SERV_PGID:?err}
      - HA_TOKEN=${SERV_HA_TOKEN:?err}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${SERV_CFG_ROOT:?err}/sonarr:/config
      - ${SERV_STORAGE_PATH:?err}/torrents:/downloads
      - ${SERV_STORAGE_PATH:?err}/tv:/tv
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'

  radarr:
    depends_on:
      - jackett
    image: linuxserver/radarr
    networks:
      - int
    ports:
      - '7878:7878'
    restart: unless-stopped
    environment:
      - TZ=Europe/Sofia
      - PUID=${SERV_PUID:?err}
      - PGID=${SERV_PGID:?err}
      - HA_TOKEN=${SERV_HA_TOKEN:?err}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${SERV_CFG_ROOT:?err}/radarr:/config
      - ${SERV_STORAGE_PATH:?err}/torrents:/downloads
      - ${SERV_STORAGE_PATH:?err}/movies:/movies
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'

  jackett:
    image: linuxserver/jackett
    networks:
      - int
    ports:
      - '9117:9117'
    restart: unless-stopped
    environment:
      - TZ=Europe/Sofia
      - PUID=${SERV_PUID:?err}
      - PGID=${SERV_PGID:?err}
    volumes:
      - ${SERV_CFG_ROOT:?err}/jackett:/config
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'

  bazarr: 
    depends_on:
      - sonarr
      - radarr
    image: linuxserver/bazarr
    networks:
      - int
    ports:
      - '6767:6767'
    restart: unless-stopped
    environment:
      - TZ=Europe/Sofia
      - PUID=${SERV_PUID:?err}
      - PGID=${SERV_PGID:?err}
    volumes:
      - ${SERV_CFG_ROOT:?err}/bazarr:/config
      - ${SERV_STORAGE_PATH:?err}/movies:/movies
      - ${SERV_STORAGE_PATH:?err}/tv:/tv
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
# Watchtower - Automatic Update of Containers/Apps
  watchtower:
    container_name: watchtower
    restart: unless-stopped
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "1 0 4 * * *" --cleanup --label-enable
   
